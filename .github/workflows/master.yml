# .github/workflows/master.yml

name: Deploy to Cloudflare Pages

# Uruchamia się tylko na pushach do gałęzi master
on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Definiuje zmienne środowiskowe dla zadania
    env:
      # Nazwa projektu w Cloudflare Pages
      CLOUDFLARE_PROJECT_NAME: shoplisteo
      # Wrangler wymaga tych zmiennych środowiskowych do uwierzytelnienia
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    # Definiuje uprawnienia dla GITHUB_TOKEN
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          npm-version: 9.6.7
          cache: "npm"

      - name: Install dependencies
        # Instaluje również wrangler
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run unit tests
        run: npm run test

      # Krok budowania jest nadal potrzebny przed wdrożeniem
      - name: Build production application
        env:
          NODE_ENV: production # Explicitly set NODE_ENV
        run: npm run build

      # Krok wdrażania na Cloudflare Pages za pomocą Wrangler CLI
      - name: Deploy to Cloudflare Pages
        # Uruchamia wrangler pages deploy
        # Przekazuje bezwzględną ścieżkę do katalogu builda ($GITHUB_WORKSPACE/dist)
        # Używa npx wrangler@3.101.0 do wymuszenia dokładnej wersji 3.101.0
        # Dodaje flagę --commit-dirty=true, aby zignorować zmiany w package*.json (nadal może być potrzebne po npm ci)
        run: npx wrangler@3.101.0 pages deploy $GITHUB_WORKSPACE/dist --project-name=${{ env.CLOUDFLARE_PROJECT_NAME }} --branch=${{ github.ref_name }} --commit-dirty=true 
        