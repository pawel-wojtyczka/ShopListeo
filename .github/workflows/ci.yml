# .github/workflows/ci.yml

name: Continuous Integration for ShopListeo

# Kontroluje, kiedy przepływ pracy będzie uruchamiany
on:
  # Uruchamia się na pushach do gałęzi master
  push:
    branches: [ master ]

  # Pozwala na ręczne uruchomienie tego przepływu pracy ze strony Actions na GitHubie
  workflow_dispatch:

# Grupuje zadania, które będą wykonywane w ramach przepływu pracy
jobs:
  # Definiuje zadanie o nazwie build-and-test
  build-and-test:
    # Typ maszyny wirtualnej, na której będzie uruchamiane zadanie
    runs-on: ubuntu-latest

    # Kroki wykonywane w ramach zadania
    steps:
      # Krok 1: Pobiera kod repozytorium
      - name: Checkout repository
        uses: actions/checkout@v4 # Używa akcji actions/checkout w wersji 4

      # Krok 2: Ustawia środowisko Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4 # Używa akcji actions/setup-node w wersji 4
        with:
          node-version-file: '.nvmrc' # Odczytuje wersję Node.js z pliku .nvmrc
          cache: 'npm' # Włącza cache'owanie dla npm

      # Krok 3: Instaluje zależności projektu
      # Ten krok użyje cache'a, jeśli zależności nie uległy zmianie
      - name: Install dependencies
        run: npm ci

      # Krok 4: Uruchamia linter, aby sprawdzić jakość kodu
      - name: Run linter
        run: npm run lint

      # Krok 5: Uruchamia testy jednostkowe
      - name: Run unit tests
        run: npm run test

      # Krok 6: Buduje aplikację w wersji produkcyjnej
      - name: Build production application
        run: npm run build 